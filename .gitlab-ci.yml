stages:
  - shellcheck
  - build
  - test
  - publish

variables:
  S3QL_VERSION: "3.0"
  BUILD_TAG: $CI_REGISTRY_IMAGE/s3ql-build:$S3QL_VERSION
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

shellcheck:
  image: koalaman/shellcheck-alpine
  stage: shellcheck
  script:
    - "find . -name '*.sh' -type f -print0 | LC_ALL=C.UTF-8 xargs -n 1 -t -0 shellcheck"
  allow_failure: true

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker pull $BUILD_TAG || true
    - docker build --cache-from $BUILD_TAG --pull --target build -t $BUILD_TAG --build-arg S3QL_VERSION .
    - docker push $BUILD_TAG
    - docker build --cache-from $BUILD_TAG --pull -t $IMAGE_TAG --build-arg S3QL_VERSION .
    - docker push $IMAGE_TAG

test:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker pull $IMAGE_TAG
    - docker run -e S3QL_USERNAME -e S3QL_PASSWORD -e S3QL_PROJECT -e FS_PASSPHRASE -e S3QL_URL
                 $IMAGE_TAG
                 sh -c "echo yes|s3qladm clear $S3QL_URL"
    - docker run -e S3QL_USERNAME -e S3QL_PASSWORD -e S3QL_PROJECT -e FS_PASSPHRASE -e S3QL_URL
                 $IMAGE_TAG
                 mkfs.s3ql --plain $S3QL_URL
    - docker run -d -e S3QL_USERNAME -e S3QL_PASSWORD -e S3QL_PROJECT -e FS_PASSPHRASE -e S3QL_URL
                 --cap-add SYS_ADMIN
                 --device /dev/fuse
                 --security-opt apparmor:unconfined
                 --name firstmount
                 $IMAGE_TAG
    - sleep 30
    - docker logs firstmount
    - test $(docker inspect -f {{.State.Running}} firstmount) = true
    - docker stop firstmount
    - docker logs firstmount
    - docker run -d -e S3QL_USERNAME -e S3QL_PASSWORD -e S3QL_PROJECT -e FS_PASSPHRASE -e S3QL_URL
                 --cap-add SYS_ADMIN
                 --device /dev/fuse
                 --security-opt apparmor:unconfined
                 --name secondmount
                 $IMAGE_TAG
    - sleep 30
    - docker logs secondmount
    - test $(docker inspect -f {{.State.Running}} secondmount) = true
    - docker stop secondmount
    - docker logs secondmount


publish:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker login -u salokyn -p $DOCKER_PASSWORD
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $CI_REGISTRY_IMAGE:latest
    - docker tag $IMAGE_TAG $CI_REGISTRY_IMAGE:$S3QL_VERSION
    - docker tag $IMAGE_TAG salokyn/docker-s3ql:latest
    - docker tag $IMAGE_TAG salokyn/docker-s3ql:$S3QL_VERSION
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$S3QL_VERSION
    - docker push salokyn/docker-s3ql:latest
    - docker push salokyn/docker-s3ql:$S3QL_VERSION
  only:
    - master
  

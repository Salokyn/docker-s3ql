stages:
  - check_sh
  - shellcheck
  - build
  - test
  - publish

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

check_sh:
  image: debian:stable-slim
  stage: check_sh
  script:
    - "find . -name '*.sh' -type f -print0 | xargs -n 1 -t -0 bash -n"

shellcheck:
  image: debian:stable-slim
  stage: shellcheck
  before_script:
    - "apt-get update -qq && apt-get install -y shellcheck"
  script:
    - "find . -name '*.sh' -type f -print0 | LC_ALL=C.UTF-8 xargs -n 1 -t -0 shellcheck"
  allow_failure: true

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

test:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker pull $IMAGE_TAG
    - docker run -e S3QL_USERNAME=$S3QL_USERNAME \
                 -e S3QL_PASSWORD=$S3QL_PASSWORD \
                 -e S3QL_PROJECT=$S3QL_PROJECT \
                 -e S3QL_URL=$S3QL_URL \
                 -e FS_PASSPHRASE=$FS_PASSPHRASE \
                 -v /s3ql:/s3ql \
                 --cap-add SYS_ADMIN \
                 --device /dev/fuse \
                 $IMAGE_TAG

publish:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker login -u salokyn -p $DOCKER_PASSWORD
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $CI_REGISTRY_IMAGE:latest
    - docker tag $IMAGE_TAG salokyn/docker-s3ql:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push salokyn/docker-s3ql:latest
  only:
    - master
  
